//============================================================================
// Name        : _KOMPOZITSIA_VECTOR_CLASA.cpp
// Author      : t
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include "University.h"
#include <iostream>
using namespace std;
/*Здравейте,
Изпращам една задача по материала за кокмпозиция, вектор и класове.
 Това е задача за упражнение, не е домашно.
Ако не успеете да реализирате логиката на даден метод, прескочете я,
и само обявете метода в хедъра и cpp-то, с нужните параметри (ако има такива) и
 тип. В случая е по-важно да видите/реализирате взаимовръзкте между отделните
 класове и организацията на класовете, вместо някаква конкретна логика как
 точно се смята нещо.

Да се направи система за университет (клас Университет).
 В системата се поддържа списък (вектор) от студенти и списък (вектор) от
 преподаватели. В клас Университет да се реализират операции (методи) по :
- добавяне на студент към списъка
- добавяне на преподавател към списъка
- търсене на студент по име и извеждане на информацията за него
- извеждане на броя на студентите с успех над 5.00
- извеждане на информация за преподавателите със стаж над 5 години.
- извеждане на информация за преподавателите със стаж над 3 години за конктретен предмет

За всеки студент (клас Студент) се пази - име, егн, масив/вектор от 10 оценки

За всеки преподавател (клас Преподавател) се пази - име, предмет, егн, стаж

Допълнителни изисквания: при добавяне на студент/преподавател към съответния списък,
 да се проверява да не се добавят повторно студент/преподавател, които са вече в
 списъците. Тази проверка да става по егн.
Да се реализира и драйвер (това е main метода) където да се изтестват основните
 функционалностти.
Съвет: започнете от класа на Преподавателя и Студента, после Университета.
Като направите даден клас - изтествайте го в мейн, преди да продължите нататък.
Университета го реализирайте стъпка по стъпка - първо единия вектор и
добаването на обекти в него, тествате го, после другия, тествате и него.
После една по една другите операции, като всяка като я завършите я тествате. */

int main() {
vector<Student*> students;
vector<Teacher*> teachers;

Student a("Teodor Kolarov" ,"9123568971",vector<unsigned short> (4,5));
students.push_back(&a);
Student b("Daniel Toshev" ,"9223568972",vector<unsigned short> (4,6));
students.push_back(&b);
Student c("Maria Masheva" ,"9323568973",vector<unsigned short> (4,3));
students.push_back(&c);

Teacher f("Stoiciv", "7502083591", "c++", 1);
teachers.push_back(&f);
Teacher g("SPetrov", "7202083592", "c", 2);
teachers.push_back(&g);
Teacher h("Mirova", "7102083593", "c#", 3);
teachers.push_back(&h);

University uni(teachers,students);

vector<unsigned>found = uni.searchStudent("","",4);

for(unsigned i=0;i<found.size();i++){
	uni.getStudents()[found[i]]->print();
}
found = uni.searchTeacher("","","",4);
for(unsigned i=0;i<found.size();i++){
	uni.getTeachers()[found[i]]->print();
}
uni.print();


	return 0;
}
